apiVersion: apps/v1
kind: Deployment
metadata:
  name: claims-scrubbing-service
  namespace: production
  labels:
    app: claims-scrubbing
    tier: backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: claims-scrubbing
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: claims-scrubbing
        tier: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: claims-scrubbing
        image: brainsait/claims-scrubbing:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: mongodb-credentials
              key: uri
        - name: REDIS_URI
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: uri
        - name: NPHIES_API_KEY
          valueFrom:
            secretKeyRef:
              name: nphies-credentials
              key: api-key
        - name: ML_INFERENCE_URL
          value: "http://ml-inference-service:8080"
        - name: ENABLE_ML_SCORING
          value: "true"
        - name: ENABLE_AUTO_CODING
          value: "true"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
---
apiVersion: v1
kind: Service
metadata:
  name: claims-scrubbing-service
  namespace: production
  labels:
    app: claims-scrubbing
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: claims-scrubbing
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: claims-scrubbing-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: claims-scrubbing-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
